swagger: "2.0"
info:
  description: "Prototype documentation for Michael Maramba's Senior Project API. This API features routes that support functionality for user registration, note-taking and saving, and data display."
  version: "1.0.0"
  title: "Senior Project API"
  contact:
    email: "mpmaramb@calpoly.edu"
tags:
- name: "item"
  description: "Routes used to manage item creation functionality"
- name: "category"
  description: "Routes used to manage categories associated with items"
- name: "user"
  description: "Routes used to manage login and registration"
- name: "session"
  description: "Routes used to manage session"
  
schemes:
- "https"
- "http"
paths:
  /item:
    post:
      tags:
      - "item"
      summary: "Create item"
      operationId: "createItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created item object"
        required: true
        schema:
          $ref: "#/definitions/Item"
      responses:
        200:
          description: "successful operation"
  /item/all:
    get:
      tags:
      - "item"
      summary: "Retrieve user's items"
      description: "Returns a list of all of the user's items"
      operationId: "getAllItems"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              res:
                type: "array"
                items:
                  $ref: '#/definitions/Item'
  /item/starred:
    get:
      tags:
      - "item"
      summary: "Retrieve user's starred items"
      description: "Returns a list of all of the user's starred items"
      operationId: "getStarredItems"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              res:
                type: "array"
                items:
                  $ref: '#/definitions/Item'
  /item/cat/{categoryId}:
    get:
      tags:
      - "item"
      summary: "Retrieve items by category"
      description: "Returns a single pet"
      operationId: "getItemsByCategory"
      produces:
      - "application/json"
      parameters:
      - name: "categoryId"
        in: "path"
        description: "ID of category to search items by"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              res:
                type: "array"
                items:
                  $ref: '#/definitions/Item'
  /item/{itemId}:
    get:
      tags:
      - "item"
      summary: "Retrieve item by ID"
      description: "Returns a single item"
      operationId: "getItemById"
      produces:
      - "application/json"
      parameters:
      - name: "itemId"
        in: "path"
        description: "ID of item to return"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Item"
    put:
      tags:
      - "item"
      summary: "Update an existing item"
      description: ""
      operationId: "updateItem"
      consumes:
      - "application/json"
      produces:
      - "application/xml"
      parameters:
      - name: "itemId"
        in: "path"
        description: "ID of item to edit"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
    delete:
      tags:
      - "item"
      summary: "Delete an item"
      description: ""
      operationId: "deleteItem"
      produces:
      - "application/json"
      parameters:
      - name: "itemId"
        in: "path"
        description: "Item ID to delete"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
  /user:
    post:
      tags:
      - "user"
      summary: "Register user"
      operationId: "createUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "successful operation"
  /user/{userId}:
    get:
      tags:
      - "user"
      summary: "Retrieve user by ID"
      description: "Returns a single user"
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID of item to return"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
    put:
      tags:
      - "user"
      summary: "Update user information"
      description: ""
      operationId: "updateUser"
      consumes:
      - "application/json"
      parameters:
      - in: "path"
        name: "userId"
        description: "ID of user to update"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Updated information of user"
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: "successful operation"
    delete:
      tags:
      - "user"
      summary: "Delete an account"
      description: ""
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "User ID to delete"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
  /session:
    post:
      tags:
      - "session"
      summary: "User Login"
      operationId: "createSession"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User login information"
        required: true
        schema:
          type: "object"
          properties:
            email:
              type: "string"
            password:
              type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              userCookie:
                type: "string"
  /session/{sessionId}:
    delete:
      tags:
      - "session"
      summary: "User logout"
      description: ""
      operationId: "deleteSession"
      parameters:
      - name: "sessionId"
        in: "path"
        description: "Session ID to delete"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
  /category:
    post:
      tags:
      - "category"
      summary: "Create category"
      operationId: "createCategory"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created category"
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        200:
          description: "successful operation"
  /category/all:
    get:
      tags:
      - "category"
      summary: "Retrieve user's categories"
      description: "Returns a list of user's categories"
      operationId: "getAllCategories"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            properties:
              res:
                type: "array"
                items:
                  $ref: '#/definitions/Category'
  /category/{categoryId}:
    put:
      tags:
      - "category"
      summary: "Edit an existing category"
      description: ""
      operationId: "updateCategory"
      consumes:
      - "application/json"
      parameters:
      - name: "categoryId"
        in: "path"
        description: "ID of category to edit"
        required: true
        type: "integer"
      - name: "body"
        in: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: '#/definitions/Category'
      responses:
        200:
          description: "successful operation"
    delete:
      tags:
      - "category"
      summary: "Delete a category"
      description: ""
      operationId: "deleteCategory"
      parameters:
      - name: "categoryId"
        in: "path"
        description: "Category ID to delete"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
definitions:
  Category:
    type: "object"
    required: 
    - "name"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
  User:
    type: "object"
    required: 
    - "email"
    - "password"
    properties:
      id:
        type: "integer"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
  Item:
    type: "object"
    required:
    - "content"
    properties:
      id:
        type: "integer"
      title:
        type: "string"
      category:
        type: "string"
      dateCreated:
        type: "string"
        format: "date-time"
      dateModified:
        type: "string"
        format: "date-time"
      star:
        type: "boolean"
        description: "whether item is starred or not"
      content:
        type: "string"
        description: "HTML representation of item content"