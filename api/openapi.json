{
  "openapi": "3.0.1",
  "info": {
    "title": "Senior Project API",
    "description": "Prototype documentation for Michael Maramba's Senior Project API. This API features routes that support functionality for user registration, note-taking and saving, and data display.",
    "contact": {
      "email": "mpmaramb@calpoly.edu"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "item",
      "description": "Routes used to manage item creation functionality"
    },
    {
      "name": "category",
      "description": "Routes used to manage categories associated with items"
    },
    {
      "name": "user",
      "description": "Routes used to manage login and registration"
    },
    {
      "name": "session",
      "description": "Routes used to manage session"
    }
  ],
  "paths": {
    "/item": {
      "post": {
        "tags": [
          "item"
        ],
        "summary": "Create item",
        "operationId": "createItem",
        "requestBody": {
          "description": "Created item object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/item/all": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Retrieve user's items",
        "description": "Returns a list of all of the user's items",
        "operationId": "getAllItems",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "res": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Item"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/item/starred": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Retrieve user's starred items",
        "description": "Returns a list of all of the user's starred items",
        "operationId": "getStarredItems",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "res": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Item"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/item/cat/{categoryId}": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Retrieve items by category",
        "description": "Returns a single pet",
        "operationId": "getItemsByCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "ID of category to search items by",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "res": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Item"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/item/{itemId}": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Retrieve item by ID",
        "description": "Returns a single item",
        "operationId": "getItemById",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "ID of item to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "item"
        ],
        "summary": "Update an existing item",
        "operationId": "updateItem",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "ID of item to edit",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "item"
        ],
        "summary": "Delete an item",
        "operationId": "deleteItem",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "Item ID to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Register user",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Retrieve user by ID",
        "description": "Returns a single user",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of item to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user information",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Updated information of user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete an account",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    },
    "/session": {
      "post": {
        "tags": [
          "session"
        ],
        "summary": "User Login",
        "operationId": "createSession",
        "requestBody": {
          "description": "User login information",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userCookie": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/session/{sessionId}": {
      "delete": {
        "tags": [
          "session"
        ],
        "summary": "User logout",
        "operationId": "deleteSession",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "Session ID to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    },
    "/category": {
      "post": {
        "tags": [
          "category"
        ],
        "summary": "Create category",
        "operationId": "createCategory",
        "requestBody": {
          "description": "Created category",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/category/all": {
      "get": {
        "tags": [
          "category"
        ],
        "summary": "Retrieve user's categories",
        "description": "Returns a list of user's categories",
        "operationId": "getAllCategories",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "res": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/category/{categoryId}": {
      "put": {
        "tags": [
          "category"
        ],
        "summary": "Edit an existing category",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "ID of category to edit",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "category"
        ],
        "summary": "Delete a category",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Category ID to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "User": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Item": {
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time"
          },
          "star": {
            "type": "boolean",
            "description": "whether item is starred or not"
          },
          "content": {
            "type": "string",
            "description": "HTML representation of item content"
          }
        }
      }
    }
  }
}